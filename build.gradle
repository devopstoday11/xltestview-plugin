/*
 * Copyright (c) 2014-2015, XebiaLabs B.V., All rights reserved.
 *
 * The XL Test plugin for Jenkins is licensed under the terms of the GPLv2
 * <http://www.gnu.org/licenses/old-licenses/gpl-2.0.html>, like most XebiaLabs
 * Libraries. There are special exceptions to the terms and conditions of the
 * GPLv2 as it is applied to this software, see the FLOSS License Exception
 * <https://github.com/jenkinsci/xltest-plugin/blob/master/LICENSE>.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 51
 * Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 */

buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'http://repo.jenkins-ci.org/releases/'
        }
    }
    dependencies {
        classpath 'org.jenkins-ci.tools:gradle-jpi-plugin:0.5.0'
        classpath 'org.eclipse.jgit:org.eclipse.jgit:3.6.1.201501031845-r'
    }
}

apply plugin: 'java'
apply plugin: 'jpi'
apply plugin: com.xebialabs.gradle.plugins.release.ReleasePlugin

apply plugin: 'eclipse'
apply plugin: 'idea'

group = "com.xebialabs.xltest.ci"
description = "Aggregate your test results in &lt;a href='http://www.xebialabs.com'&gt;XebiaLabs XL Test&lt;/a&gt;."

com.xebialabs.gradle.plugins.release.util.VersionUtil.setVersion(project)

if (project.rootProject == project) {
    String msg = "${project.name}-${project.version}"
    println "+".padRight(msg.length() + 3, '-') + "+"
    println "| $msg |"
    println "+".padRight(msg.length() + 3, '-') + "+"
}

build.dependsOn jpi

task deleteGeneratedSrcLocalizer(type:Delete) {
    delete "build/generated-src/localizer"
}

localizer.dependsOn deleteGeneratedSrcLocalizer

jenkinsPlugin {
    coreVersion = '1.580.3' // we need to support LTS versions
    displayName = "XebiaLabs XL Test Plugin"
    url = 'https://wiki.jenkins-ci.org/display/JENKINS/XL+Test+Plugin'
    gitHubUrl = 'https://github.com/jenkinsci/xltest-plugin'

    developers {
        developer {
            id 'XebiaLabsCI'
            name 'XebiaLabs'
            email 'xl-developers (at) xebialabs (dot) com'
        }
    }
}

repositories {
    mavenCentral()
    maven {
        url 'http://repo.jenkins-ci.org/public/'
    }
}

// disable tests they need work
test.onlyIf { false }

// if buidling in XebiaLabs infrastructure configure our repository
if(project.hasProperty('nexusBaseUrl')) {
    // return the version number
    tasks.jpi.archiveName = "${name}-${version}.hpi"

    // deploy to internal nexus
    def uploadArchives = tasks.getByName("uploadArchives")
    uploadArchives.doFirst {
        repositories {
            def nexusReleaseUrl = "${project.nexusBaseUrl}/repositories/releases"
            if (project.version.toString().contains("-alpha-")) {
                nexusReleaseUrl = "${project.nexusBaseUrl}/repositories/alphas"
            }

            mavenDeployer {
                repository(url: nexusReleaseUrl) {
                    authentication(userName: "${project.nexusUserName}", password: "${project.nexusPassword}")
                }
                snapshotRepository(url: "${project.nexusBaseUrl}/repositories/snapshots") {
                    authentication(userName: "${project.nexusUserName}", password: "${project.nexusPassword}")
                }
                addFilter('jpi') {artifact, file ->
                    artifact.type == 'jpi'
                }
            }
        }
    }
}

configurations {
    compile.transitive = true
    providedRuntime.exclude group: 'jdom', module: 'jdom' //Engine packager requires JDOM2. Exclude from config so that it is included in the hpi Web-Inf lib.
    providedRuntime.exclude group: 'de.schlichtherle.truezip', module: 'truezip-path' // needs Java7, borks on Java6 setups
    all*.exclude group: 'com.thoughtworks.xstream', module: 'xstream'
    // this artifact lives in a netbeans repository which behaves flakey
    // it's not used so exclude it.
    testCompile.exclude group: 'org.netbeans.modules', module: 'org-netbeans-insane'
}

dependencies {
    compile "com.sun.jersey:jersey-client:1.18"
    compile "com.sun.jersey:jersey-core:1.18"
    compile "com.sun.jersey:jersey-json:1.18"
    compile "org.slf4j:slf4j-api:1.7.5"

    compile 'com.google.code.findbugs:jsr305:2.0.2'
    compile 'findbugs:annotations:1.0.0'

    testCompile "junit:junit:4.11"
    testCompile "org.mockito:mockito-all:1.9.5"
}

// configure release plugin
import com.xebialabs.gradle.plugins.release.util.ReleaseSupport
import com.xebialabs.gradle.plugins.release.util.BetaReleaseSupport

releasePlugin {
    types {
        release {
            tag         { -> ReleaseSupport.tag(project) }
            preBuild    { task -> ReleaseSupport.preBuildConfiguration(project, task) }
            postBuild   { task -> ReleaseSupport.postBuildConfiguration(project, task) }
        }
        beta {
            tag         { -> BetaReleaseSupport.tag(project) }
            preBuild    { task -> BetaReleaseSupport.preBuildConfiguration(project, task) }
            postBuild   { task -> BetaReleaseSupport.postBuildConfiguration(project, task) }
        }
    }
}
